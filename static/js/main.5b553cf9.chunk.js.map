{"version":3,"sources":["assets/styles/components/ConnectionBox.module.css","assets/styles/components/Header.module.css","contexts/CounterContext.js","contexts/MessagesContext.js","constants/socket.js","contexts/SocketContext.js","modules/ContextStore.js","assets/themes/MuiTheme.js","modules/WebsocketModule.js","components/ConnectionBox.js","components/MessageCounter.js","components/Header.js","pages/App.js","reportWebVitals.js","index.js"],"names":["module","exports","url_container","url_input","url_btn","msg_container","msg_input","msg_btn","header_text","CounterContext","createContext","CounterContextProvider","props","_useState","useState","_useState2","_slicedToArray","counter","setCounter","addToCounter","useCallback","amount","arguments","length","undefined","prev","React","createElement","Provider","value","children","useCounterContext","useContext","MessagesContext","MessagesContextProvider","lastMessage","setLastMessage","changeLastMessage","message","useMessagesContext","DEFAULT_SOCKET_MESSAGE","JSON","stringify","event","data","channel","SocketContext","SocketContextProvider","connectionStatus","setConnectionStatus","_useState3","_useState4","url","setUrl","_useState5","_useState6","wsMsg","setWsMsg","changeUrl","input","setSendMessage","changeWsStatus","status","useSocketContext","ContextStore","_ref","theme","createTheme","palette","primary","main","dark","border","textDark","textLight","MuiSkinThemeProvider","ThemeProvider","WebSocketComponent","_useSocketContext","socket","setSocket","useEffect","openSocket","closeSocket","console","log","send","ws","WebSocket","onerror","err","onopen","onmessage","msg","msgdata","close","Fragment","ConnectionBox","urlInputValue","msgInputValue","Container","width","sx","display","flexDirection","bgcolor","className","styles","defaultValue","type","onChange","target","onClick","disabled","alignItems","minHeight","Header","height","justifyContent","App","WebsocketModule","maxWidth","borderColor","padding","MessageCounter","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.5b553cf9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"url_container\":\"ConnectionBox_url_container__ZiqWH\",\"url_input\":\"ConnectionBox_url_input__3FnLF\",\"url_btn\":\"ConnectionBox_url_btn__1a2zb\",\"msg_container\":\"ConnectionBox_msg_container__1U6Fe\",\"msg_input\":\"ConnectionBox_msg_input__38q8i\",\"msg_btn\":\"ConnectionBox_msg_btn__3H_l-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header_text\":\"Header_header_text__H1KH5\"};","import React, { useState, createContext, useContext, useCallback } from 'react';\r\n\r\nexport const CounterContext = createContext();\r\n\r\nexport const CounterContextProvider = (props) => {\r\n  const [counter, setCounter] = useState(0);\r\n\r\n  const addToCounter = useCallback((amount = 1) => {\r\n    setCounter((prev) => prev + amount)\r\n  })\r\n\r\n  return (\r\n    <CounterContext.Provider value={{ counter, addToCounter }}>\r\n      {props.children}\r\n    </CounterContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useCounterContext = () => useContext(CounterContext);\r\n","import React, { useState, createContext, useContext, useCallback } from 'react';\r\n\r\nexport const MessagesContext = createContext();\r\n\r\nexport const MessagesContextProvider = (props) => {\r\n  const [lastMessage, setLastMessage] = useState(\"\");\r\n\r\n  const changeLastMessage = useCallback((message) => {\r\n    if(message) setLastMessage(message);\r\n  })\r\n\r\n  return (\r\n    <MessagesContext.Provider value={{ lastMessage, changeLastMessage }}>\r\n      {props.children}\r\n    </MessagesContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useMessagesContext = () => useContext(MessagesContext);\r\n","\n\nexport const DEFAULT_SOCKET_URL = 'wss://ws.bitstamp.net';\nexport const DEFAULT_SOCKET_MESSAGE = JSON.stringify({\n    event: \"bts:subscribe\",\n    data: {\n        channel: \"order_book_btcusd\"\n    }\n})\n\nexport const SOCKET_STATUS_ON = 'on';\nexport const SOCKET_STATUS_OFF = 'off';\nexport const SOCKET_STATUS_CONNECTING = 'connecting';\nexport const SOCKET_STATUS_CLOSING = 'closing';\n","import React, { useState, createContext, useContext, useCallback } from 'react';\nimport { SOCKET_STATUS_ON, SOCKET_STATUS_OFF, SOCKET_STATUS_CONNECTING, SOCKET_STATUS_CLOSING } from '../constants/socket.js';\n\nexport const SocketContext = createContext();\n\nexport const SocketContextProvider = (props) => {\n  const [connectionStatus, setConnectionStatus] = useState(SOCKET_STATUS_OFF);\n  const [url, setUrl] = useState(\"\");\n  const [wsMsg, setWsMsg] = useState(null);\n\n  const changeUrl = useCallback((input) => {\n    if (input) setUrl(input);\n  })\n\n  const setSendMessage = useCallback((input = '') => {\n    setWsMsg(input);\n  })\n\n  const changeWsStatus = useCallback((status) => {\n    switch (status) {\n      case SOCKET_STATUS_ON:\n        setConnectionStatus(SOCKET_STATUS_ON);\n        break;\n      case SOCKET_STATUS_OFF:\n        setConnectionStatus(SOCKET_STATUS_OFF);\n        break;\n      case SOCKET_STATUS_CONNECTING:\n        setConnectionStatus(SOCKET_STATUS_CONNECTING);\n        break;\n      case SOCKET_STATUS_CLOSING:\n        setConnectionStatus(SOCKET_STATUS_CLOSING);\n        break;\n      default:\n        break;\n    }\n  })\n\n  return (\n    <SocketContext.Provider value={{ connectionStatus, url, wsMsg, changeUrl, setSendMessage, changeWsStatus }}>\n      {props.children}\n    </SocketContext.Provider>\n  );\n};\n\nexport const useSocketContext = () => useContext(SocketContext);\n","import React from \"react\";\n\nimport { CounterContextProvider } from \"../contexts/CounterContext\";\nimport { MessagesContextProvider } from \"../contexts/MessagesContext\";\nimport { SocketContextProvider } from \"../contexts/SocketContext\";\n\nconst ContextStore = ({ children }) => {\n  return (\n    <CounterContextProvider>\n      <MessagesContextProvider>\n        <SocketContextProvider>\n          {children}\n        </SocketContextProvider>\n      </MessagesContextProvider>\n    </CounterContextProvider>\n  );\n};\n\nexport default ContextStore;","import React from 'react';\r\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\r\n\r\nconst theme = createTheme({\r\n    palette: {\r\n        primary: {\r\n            main: '#e0e0e0',\r\n            dark: '#333',\r\n            border: '#c0c0c0',\r\n            textDark: '#333',\r\n            textLight: '#f0f0f0'\r\n        }\r\n    }\r\n});\r\n\r\nexport const MuiSkinThemeProvider  = (props) => {\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            {props.children}\r\n        </ThemeProvider>\r\n    );\r\n};\r\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { useSocketContext } from '../contexts/SocketContext.js';\nimport { useMessagesContext } from '../contexts/MessagesContext.js';\nimport { useCounterContext } from '../contexts/CounterContext.js';\nimport { SOCKET_STATUS_ON, SOCKET_STATUS_OFF, SOCKET_STATUS_CONNECTING, SOCKET_STATUS_CLOSING } from '../constants/socket.js';\n\n/**\n  Handles a websocket connection which is contolled by the useSocketContext \n  TODO: create a Backoff strategy if needed\n */\nconst WebSocketComponent = (props) => {\n  const { connectionStatus, changeWsStatus, url, wsMsg, setSendMessage } = useSocketContext();\n  const { changeLastMessage } = useMessagesContext();\n  const { addToCounter } = useCounterContext();\n\n  const [socket, setSocket] = useState(null);\n\n  //handles toggling of the websocket connection\n  useEffect(() => {\n    switch (connectionStatus) {\n      case SOCKET_STATUS_CONNECTING:\n        openSocket();\n        break;\n      case SOCKET_STATUS_CLOSING:\n        closeSocket();\n        break;\n      default:\n        break;\n    }\n\n  }, [connectionStatus]);\n\n  //sends a message when wsMsg is set and the websocket conneciton is on\n  useEffect(() => {\n    console.log(' -- -- WebSocketComponent', connectionStatus, wsMsg);\n    if (connectionStatus === SOCKET_STATUS_ON && typeof wsMsg === 'string') {\n      socket.send(wsMsg);\n    }\n  }, [wsMsg]);\n\n  const openSocket = useCallback(() => {\n    const ws = new WebSocket(url);\n    setSocket(ws);\n\n    ws.onerror = (err) => {\n      console.log(\"socket error\", err);\n      closeSocket();\n    };\n\n    ws.onopen = () => {\n      console.log(\"socket has opened\");\n      changeWsStatus(SOCKET_STATUS_ON);\n    };\n\n    ws.onmessage = (msg) => {\n      const msgdata = msg.data;\n      console.log(\"socket onmessage\", msgdata);\n      changeLastMessage(msgdata);\n      addToCounter();\n    };\n  });\n\n  const closeSocket = useCallback(() => {\n    if (!socket) return;\n    console.log(\"socket is closing\");\n    socket.close();\n    changeWsStatus(SOCKET_STATUS_OFF);\n    setSocket(null);\n    setSendMessage();\n    console.log(\"socket has closed\");\n  });\n\n  return (\n    <>\n      {props.children}\n    </>\n  );\n}\n\nexport default WebSocketComponent;","import React from 'react';\r\nimport { Container } from '@mui/material';\r\n\r\nimport styles from '../assets/styles/components/ConnectionBox.module.css';\r\nimport { useSocketContext } from '../contexts/SocketContext.js';\r\nimport { DEFAULT_SOCKET_URL, DEFAULT_SOCKET_MESSAGE, SOCKET_STATUS_ON, SOCKET_STATUS_OFF, SOCKET_STATUS_CONNECTING, SOCKET_STATUS_CLOSING } from '../constants/socket.js';\r\n\r\nconst ConnectionBox = () => {\r\n    const { connectionStatus, changeWsStatus, changeUrl, setSendMessage } = useSocketContext();\r\n    let urlInputValue = DEFAULT_SOCKET_URL;\r\n    let msgInputValue = DEFAULT_SOCKET_MESSAGE;\r\n\r\n    const onSocketButton = () => {\r\n        if (connectionStatus === SOCKET_STATUS_OFF) {\r\n            changeUrl(urlInputValue);\r\n            changeWsStatus(SOCKET_STATUS_CONNECTING)\r\n        }\r\n        else if (connectionStatus === SOCKET_STATUS_ON) {\r\n            changeWsStatus(SOCKET_STATUS_CLOSING)\r\n        }\r\n    };\r\n\r\n    const onMessageButton = () => {\r\n        setSendMessage(msgInputValue);\r\n    };\r\n\r\n    /**\r\n      components:\r\n        1. url input\r\n        2. connect ws button\r\n        3. socket status \r\n        4. message input\r\n        5. send message button\r\n     */\r\n\r\n    return (\r\n        <Container\r\n            width=\"100%\"\r\n            sx={{\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                bgcolor: 'primary.main'\r\n            }}\r\n        >\r\n            <div className={styles.url_container}>\r\n                <input className={styles.url_input} defaultValue={DEFAULT_SOCKET_URL} type=\"text\" onChange={event => urlInputValue = event.target.value} />\r\n                <button\r\n                    className={styles.url_btn}\r\n                    onClick={onSocketButton}\r\n                    disabled={connectionStatus === SOCKET_STATUS_ON || connectionStatus === SOCKET_STATUS_OFF ? false : true}\r\n                >\r\n                    {\r\n                        connectionStatus === SOCKET_STATUS_ON ? \"Stop socket\" :\r\n                            connectionStatus === SOCKET_STATUS_OFF ? \"Open socket\" : \"pending\"\r\n                    }\r\n                </button>\r\n            </div>\r\n            <div className={styles.msg_container}>\r\n                <label>WS status: {connectionStatus}</label>\r\n                <textarea className={styles.msg_input} type=\"textarea\" defaultValue={DEFAULT_SOCKET_MESSAGE} onChange={event => msgInputValue = event.target.value} />\r\n                <button className={styles.msg_btn} onClick={onMessageButton} disabled={connectionStatus !== SOCKET_STATUS_ON ? true : false}>\r\n                    Send message\r\n                </button>\r\n            </div>\r\n        </Container>\r\n\r\n    );\r\n}\r\n\r\nexport default ConnectionBox;","import React from 'react';\r\nimport { Container } from '@mui/material';\r\n\r\nimport styles from '../assets/styles/components/ConnectionBox.module.css';\r\nimport { useMessagesContext } from '../contexts/MessagesContext.js';\r\nimport { useCounterContext } from '../contexts/CounterContext.js';\r\n\r\nconst ConnectionBox = () => {\r\n    const { lastMessage } = useMessagesContext();\r\n    const { counter } = useCounterContext();\r\n\r\n    /**\r\n      components:\r\n        1. counter\r\n        2. last message\r\n     */\r\n\r\n    return (\r\n        <Container\r\n            sx={{\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                alignItems: 'center',\r\n                bgcolor: 'primary.main',\r\n                minHeight: '300px'\r\n            }}\r\n        >\r\n            <label className={styles.counter}>Message Counter: {counter}</label>\r\n            <label>Last Message:<br/>{lastMessage}</label>\r\n        </Container>\r\n\r\n    );\r\n}\r\n\r\nexport default ConnectionBox;","import React from 'react';\r\nimport { Container } from '@mui/material';\r\n\r\nimport styles from '../assets/styles/components/Header.module.css';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <Container\r\n            width=\"100%\"\r\n            sx={{\r\n                height: '50px',\r\n                alignItems: 'center',\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                justifyContent: 'center',\r\n                bgcolor: 'primary.dark'\r\n            }}\r\n        >\r\n            <h1 className={styles.header_text}>WS message counter</h1>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\nimport { Container } from '@mui/material';\n\nimport ContextStore from '../modules/ContextStore.js';\nimport { MuiSkinThemeProvider } from '../assets/themes/MuiTheme.js';\n\nimport WebsocketModule from '../modules/WebsocketModule.js';\nimport ConnectionBox from '../components/ConnectionBox.js';\nimport MessageCounter from '../components/MessageCounter.js';\nimport Header from '../components/Header.js';\n\nfunction App() {\n\n  return (\n    <ContextStore>\n      <MuiSkinThemeProvider>\n\n        <WebsocketModule />\n        <Container\n          maxWidth=\"md\"\n          sx={{\n            alignItems: 'center',\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'center',\n            bgcolor: 'primary.main',\n            border: 1,\n            borderColor: 'primary.border',\n            padding: '0!important'\n          }}\n        >\n          <Header />\n          <ConnectionBox />\n          <MessageCounter />\n        </Container>\n\n      </MuiSkinThemeProvider>\n    </ContextStore>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './pages/App';\nimport reportWebVitals from './reportWebVitals';\nimport './assets/index.css';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}